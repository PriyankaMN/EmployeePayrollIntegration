<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="main-suite.xml" />
	<munit:test name="project3-papi-1Flow-test" doc:id="08a25741-3dd5-4f86-8b29-59f5d1e03be5" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock flowReferenceSalesForce" doc:id="d765c76e-a4b9-4444-9454-978103c23060" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="d4a71adb-ead4-4f57-aeb4-74dcc7571143" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[readUrl('classpath://project3papi1Flowtest\mock_payload.dwl')]" />
					<munit-tools:variables >
						<munit-tools:variable key="FileName" value="#[readUrl('classpath://project3papi1Flowtest\mock_variable_.dwl')]" />
						<munit-tools:variable key="CorelationId" value="#[readUrl('classpath://project3papi1Flowtest\mock_variable_1.dwl')]" encoding="UTF-8" />
						<munit-tools:variable key="sfData" value="#[output application/json --- readUrl('classpath://project3papi1Flowtest\mock_variable_2.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="sftpData" value="#[output application/json --- readUrl('classpath://project3papi1Flowtest\mock_variable_3.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="copy" value="#[output application/java --- readUrl('classpath://project3papi1Flowtest\mock_variable_4.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="dbData" value="#[output application/json --- readUrl('classpath://project3papi1Flowtest\mock_variable_5.dwl')]" mediaType="application/json" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock flowReferenceDataBaseData" doc:id="c103f955-d204-4e26-a5ee-fa53549e2b64" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="0034a787-b8a6-451e-95e3-fe85fcbf7350" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[readUrl('classpath://project3papi1Flowtest\mock_payload1.dwl')]" />
					<munit-tools:variables >
						<munit-tools:variable key="FileName" value="#[readUrl('classpath://project3papi1Flowtest\mock_variable_6.dwl')]" />
						<munit-tools:variable key="CorelationId" value="#[readUrl('classpath://project3papi1Flowtest\mock_variable_7.dwl')]" encoding="UTF-8" />
						<munit-tools:variable key="copy" value="#[output application/java --- readUrl('classpath://project3papi1Flowtest\mock_variable_8.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="dbData" value="#[output application/json --- readUrl('classpath://project3papi1Flowtest\mock_variable_9.dwl')]" mediaType="application/json" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock flowReferenceSFTP" doc:id="f70858e8-b347-4565-b534-dc852d70d7e6" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="5bd3a775-9634-4896-b143-2ac7dd9eccaf" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[readUrl('classpath://project3papi1Flowtest\mock_payload2.dwl')]" />
					<munit-tools:variables >
						<munit-tools:variable key="FileName" value="#[readUrl('classpath://project3papi1Flowtest\mock_variable_10.dwl')]" />
						<munit-tools:variable key="CorelationId" value="#[readUrl('classpath://project3papi1Flowtest\mock_variable_11.dwl')]" encoding="UTF-8" />
						<munit-tools:variable key="sftpData" value="#[output application/json --- readUrl('classpath://project3papi1Flowtest\mock_variable_12.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="copy" value="#[output application/java --- readUrl('classpath://project3papi1Flowtest\mock_variable_13.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="dbData" value="#[output application/json --- readUrl('classpath://project3papi1Flowtest\mock_variable_14.dwl')]" mediaType="application/json" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="9a0ddd7f-ddf3-49ec-999f-ed46eb49eab1" >
				<munit:payload value="#[readUrl('classpath://project3papi1Flowtest\set-event_payload.dwl')]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to project3-papi-1Flow" doc:id="24f6f72f-078f-48d2-934f-c9d7927ebaf3" name="project3-papi-1Flow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="8c22564e-b3f6-4bb2-828c-bf4dae5f86c8" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import project3papi1Flowtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>


</mule>
